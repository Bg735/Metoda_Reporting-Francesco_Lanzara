@{
    ViewData["Title"] = "Profilo";
}
@using System.IO
@using UserDocuments.Models

<div class="d-flex justify-content-center">
    <div class="w-100" style="max-width: 1200px;">

        <div class="d-flex justify-content-end mb-3">
            <form asp-controller="User" asp-action="Logout" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="returnUrl" value="@Url.Action("Index", "Home")" />
                <button type="submit" class="btn btn-danger btn-sm">
                    <i class="bi bi-box-arrow-right me-1"></i> Logout
                </button>
            </form>
        </div>

        <h2 class="text-center mb-2">@ViewBag.Email</h2>

        <h3 class="text-center mb-5">Ultimi documenti</h3>

        <div class="table-responsive mt-50">
            <table class="table table-striped table-bordered align-middle mx-auto" style="width: 100%;">
                <thead class="table-light">
                    <tr>
                        <th scope="col">Tipo</th>
                        <th scope="col">Formato</th>
                        <th scope="col">Data generazione</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var docs = ViewBag.RecentDocuments as IEnumerable<dynamic>;
                        if (docs == null || !docs.Any())
                        {
                            <tr>
                                <td colspan="3" class="text-center text-muted">Nessun documento</td>
                            </tr>
                        }
                        else
                        {
                            foreach (var doc in docs)
                            {
                                string fileName = doc.FileName as string ?? "";
                                string ext = System.IO.Path.GetExtension(fileName)?.ToLowerInvariant() ?? "";
                                string formato = ext switch
                                {
                                    ".pdf" => "PDF",
                                    ".xls" or ".xlsx" or ".xlsm" => "Excel",
                                    _ => "-"
                                };
                                string tipo = DocumentTypes.TryFromFileName(fileName, out var t) && t is not null
                                    ? t.Title
                                    : fileName;
                                Console.WriteLine(t);
                                Console.WriteLine(tipo);
                                <tr>
                                    <td>
                                        <a asp-controller="User"
                                           asp-action="Download"
                                           asp-route-id="@(doc.Id)"
                                           class="link-primary text-decoration-none">
                                            @tipo
                                        </a>
                                    </td>
                                    <td>@formato</td>
                                    <td>@doc.CreatedAtLocal.ToString("g")</td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
